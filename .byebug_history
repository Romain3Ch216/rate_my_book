continue
[nil, false].include?(Chapter.find(38).reads.where(user: current_user).first)
[nil, false].include?(Chapter.find(37).reads.where(user: current_user).first)
[nil, false].include?(Chapter.find(38).reads.where(user: current_user).first)
[nil, false].include?(Chapter.find(38).reads.where(user: current_user).first
@book.chapters.find_by_chapter_id(38)
@book.chapters
Chapter.find(38).reads
@book.chapters.find { |chapter| [nil, false].include?(chapter.reads.where(user: current_user).first)}
continue
@book.chapters.find { |chapter| [nil, false].include?(chapter.reads.where(user: current_user).first)}
continue
@book.chapters.find { |chapter| [nil, false].include?(chapter.reads.where(user: current_user).first)}
@book
continue
Chapter.find(37)
@book.chapters.find { |chapter| [nil, false].include?(chapter.reads.where(user: current_user).first)}
continue
@book.chapters.find { |chapter| [nil, false].include?(chapter.reads.where(user: current_user).first)}
continue
@book.chapters.find { |chapter| chapter.reads.where(user: current_user).first.is_read == false}.nil?
@book.chapters.find { |chapter| chapter.reads.where(user: current_user).first.is_read == false}
@book.chapters.find_by { |chapter| chapter.reads.where(user: current_user).first.is_read == false}.nil?
@book.chapters.find_by { |chapter| chapter.reads.where(user: current_user).first.is_read == false}
c
Upvote.find(params[:id])
